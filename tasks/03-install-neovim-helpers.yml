---
- name: Install neovim python helpers
  pip:
    name: "{{ nvim_python_mods }}"
    executable: "{{ pyenv_root }}/versions/{{ nvim_python_ver }}/bin/pip"
  become: yes
  become_user: "{{ nvim_user }}"

- name: Install system requirements for LSP clients
  package:
    name: "{{ nvim_lsp_requirements }}"
    state: present
  become: true

- name: Install rust-src for rust_analyzer
  command:
    cmd: rustup component add rust-src
    creates: "{{ nvim_user_home }}/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/manifest-rust-src"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ rustup_user_home }}/.cargo/bin"
  become: yes
  become_user: "{{ nvim_user }}"
  when:
    - nvim_install_rls|default(false)

- name: Install rust_analyzer
  shell:
    cmd: |
      set -o pipefail
      curl -fL                                                                                      \
        https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-linux \
        -o ~/.local/bin/rust-analyzer                                                               \
        --create-dirs
      chmod +x ~/.local/bin/rust-analyzer
    executable: /bin/bash
    creates: "{{ nvim_user_home }}/.local/bin/rust-analyzer"
  become: yes
  become_user: "{{ nvim_user }}"
  when: nvim_install_rls|default(false)

# Install supporting tools
- name: Clone fzf
  git:
    repo: https://github.com/junegunn/fzf.git
    dest: "{{ nvim_user_home }}/.local/share/fzf/"
    version: master
    depth: 1
  become: yes
  become_user: "{{ nvim_user }}"
  when: nvim_install_fzf|default(false)

- name: Install fzf
  shell:
    cmd: |
      set -o pipefail
      $HOME/.local/share/fzf/install \
        {% if nvim_fzf_bin_only -%}
          --bin
        {%- else -%}
          --all
        {%- endif %}
    executable: /bin/bash
    creates: "{{ nvim_user_home }}/.local/share/fzf/bin/fzf"
  become: yes
  become_user: "{{ nvim_user }}"
  when: nvim_install_fzf|default(false)
